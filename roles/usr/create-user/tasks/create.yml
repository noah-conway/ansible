---
# This role creates a single user, defines as a dictionary in the form:
# user:
#   username: 
#   password:
#   shell:
#   create_ssh_key:
#   sudo:
#   dotfiles:
#     - app
#     - app
#   user: state
#   change_password:
#

- name: "Installing ZSH"
  become: yes
  ansible.builtin.package:
    name: 
      - zsh
    state: present
  when: 'user.shell is defined and user.shell == "zsh"'

- name: 'Creating "sudoers" group'
  become: yes
  ansible.builtin.group:
    name: sudo
    state: present
  when: "user.sudo == true"

- name: 'Allowing the "sudoers" group to run sudo'
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^# %sudo ALL=ALL\(ALL:ALL\) ALL$'
    line: '%sudo ALL=(ALL:ALL) ALL'
    validate: '/usr/sbin/visudo -cf %s'
  when: "user.sudo == true"

- name: "Create user"
  become: yes
  ansible.builtin.user:
    name: "{{ user.username }}"
      #id: " {{ item.uid | default(omit, True) }}"
    shell: "/bin/{{ user.shell if user.shell is defined else default_shell }}"
    createhome: true
    generate_ssh_key: "{{ user.create_ssh_key | default(False) }}"
    ssh_key_type: "ed25519"
    ssh_key_comment: "Key for {{ user.username }}@{{ ansible_hostname }}"
    state: "{{ user.state }}"

- name: "Assigning user password"
  become: yes
  ansible.builtin.user:
    name: "{{ user.username }}"
    password: "{{ user.password }}"
  when: "user.overwrite_password == true"
 
- name: "Adding sudo users"
  become: yes
  ansible.builtin.user:
    name: "{{ user.username }}"
    groups: sudo
    append: true
  when: "user.sudo == true"
    
- name: Verifying git install
  become: yes
  ansible.builtin.package:
    name: git
    state: latest

- name: "Configuring Git"
  ansible.builtin.include_tasks: git.yml
  when: "user.git_auth == true"



